{{ if gt .Values.hive.metastore.replicaCount 0.0 }}
apiVersion: v1
kind: ReplicationController
metadata:
  namespace: {{ .Release.Namespace }}
  name: hivemr3-metastore
spec:
  replicas: {{ .Values.hive.metastore.replicaCount}}
  selector:
    hivemr3_hive_source: hivesrc5
    hivemr3_app: metastore
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      name: hivemr3-metastore
      labels:
        hivemr3_hive_source: hivesrc5
        hivemr3_app: metastore
    spec:
      restartPolicy: Always
      containers:
      - image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command: ["/opt/mr3-run/hive/metastore-service.sh"]
        args: ["start", "--init-schema"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: metastore
        # env:
        # - name: CLIENT_TO_AM_TOKEN_KEY
        #   valueFrom:
        #     configMapKeyRef:
        #       name: client-am-config
        #       key: key
        # - name: MR3_APPLICATION_ID_TIMESTAMP
        #   valueFrom:
        #     configMapKeyRef:
        #       name: client-am-config
        #       key: timestamp
        # - name: MR3_SHARED_SESSION_ID
        #   valueFrom:
        #     configMapKeyRef:
        #       name: client-am-config
        #       key: mr3sessionid
        # - name: ATS_SECRET_KEY
        #   valueFrom:
        #     configMapKeyRef:
        #       name: client-am-config
        #       key: ats-secret-key
        {{ if .Values.hive.metastore.resources}}
        resources:
          requests:
            cpu: {{ .Values.hive.metastore.resources.requests.cpu}}
            memory: {{ .Values.hive.metastore.resources.requests.memory}}
          limits:
            cpu: {{ .Values.hive.metastore.resources.limits.cpu}}
            memory: {{ .Values.hive.metastore.resources.limits.memory}}
        {{ end }}
        ports:
        - containerPort: {{ .Values.hive.metastore.port }}
          protocol: TCP
        volumeMounts:
        - name: env-k8s-volume
          mountPath: /opt/mr3-run/env.sh
          subPath: env.sh
        - name: conf-k8s-volume
          mountPath: /opt/mr3-run/conf/
          readOnly: true
        - name: key-k8s-volume
          mountPath: /opt/mr3-run/key/
          readOnly: true
        - name: am-local-k8s-volume
          mountPath: /opt/mr3-run/am-local-dir
        - name: work-dir-volume
          mountPath: /opt/mr3-run/work-dir
        - name: hiveserver2-ranger-policy-k8s-volume
          mountPath: /opt/mr3-run/hiveserver2-ranger-policycache
      volumes:
      - name: env-k8s-volume
        configMap:
          name: env-configmap
      - name: conf-k8s-volume
        configMap:
          name: hivemr3-conf-configmap
      - name: key-k8s-volume
        secret:
          secretName: hivemr3-keytab-secret
      - name: am-local-k8s-volume
        emptyDir: {}
      - name: work-dir-volume
        persistentVolumeClaim:
          claimName: metastore-workdir-pvc
      - name: hiveserver2-ranger-policy-k8s-volume
        emptyDir: {}
{{ end }}
